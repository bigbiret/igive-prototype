---
export interface Props {
  currentStep?: number;
  steps?: Array<{
    number: number;
    title: string;
    subtitle: string;
  }>;
}

const {
  currentStep = 1,
  steps = [
    { number: 1, title: 'Velg metode', subtitle: 'Per gavekort' },
    { number: 2, title: 'Konfigurer', subtitle: 'Mottakere' }
  ]
} = Astro.props;
---

<div class="progress-stepper bg-white rounded-2xl border border-gray-200 shadow-sm p-6 mb-8">
  <div class="flex items-center justify-between max-w-sm mx-auto">
    {steps.map((step, index) => (
      <>
        <div
          class="step-item relative flex flex-col items-center cursor-pointer group"
          data-step={step.number}
          class:list={[
            currentStep === step.number && 'active',
            currentStep > step.number && 'completed'
          ]}
        >
          <div class="step-circle w-12 h-12 bg-white border-2 border-gray-300 text-gray-500 rounded-full flex items-center justify-center font-semibold mb-2 transition-all duration-300 group-hover:scale-110">
            <span class="step-number">{step.number}</span>
            <svg class="step-check w-5 h-5 text-white hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M5 13l4 4L19 7" />
            </svg>
          </div>
          <span class="text-xs font-semibold text-gray-500 transition-colors">{step.title}</span>
          <span class="text-xs text-gray-400 mt-0.5">{step.subtitle}</span>
        </div>

        {index < steps.length - 1 && (
          <div class="w-32 h-0.5 bg-gray-200 mx-3 rounded-full relative">
            <div
              class="progress-line absolute inset-0 bg-gradient-to-r from-[#D4A574] to-[#C49560] rounded-full transition-all duration-500"
              style={currentStep > step.number ? 'width: 100%' : 'width: 0%'}
            />
          </div>
        )}
      </>
    ))}
  </div>
</div>

<style>
  .step-item.active .step-circle {
    @apply bg-[#D4A574] text-white border-[#D4A574] shadow-md;
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .8;
    }
  }

  .step-item.completed .step-circle {
    @apply bg-gradient-to-br from-[#D4A574] to-[#C49560] text-white border-[#D4A574] shadow-md;
  }

  .step-item.completed .step-number {
    @apply hidden;
  }

  .step-item.completed .step-check {
    @apply block;
  }

  .step-item.active span,
  .step-item.completed span {
    @apply text-gray-900;
  }
</style>