---
import { METHOD_CONFIGS } from '../../lib/constants';

export interface Props {
  cardId: number;
  selected?: string | null;
}

const { cardId, selected = null } = Astro.props;
---

<div class="grid grid-cols-3 gap-3">
  {Object.entries(METHOD_CONFIGS).map(([method, config]) => (
    <button
      type="button"
      class="method-btn relative p-4 bg-white border border-gray-200 rounded-xl hover:border-[#D4A574] hover:shadow-md transition-all group focus:outline-none focus:ring-2 focus:ring-[#D4A574]/30 focus:border-[#D4A574] transform hover:scale-[1.02] active:scale-[0.98]"
      data-card={cardId}
      data-method={method}
      class:list={[
        selected === method && 'border-[#D4A574] bg-[#FDF9F5] shadow-lg'
      ]}
    >
      <div class={`w-8 h-8 ${config.bgColor} rounded-md flex items-center justify-center mx-auto mb-2 group-hover:${config.bgColor.replace('50', '100')} transition-colors`}>
        <div class={config.textColor} set:html={config.icon} />
      </div>
      <p class="text-xs font-semibold text-gray-900">{config.name}</p>
      <p class="text-xs text-gray-500 mt-0.5">{config.description}</p>
    </button>
  ))}
</div>

<style>
  .method-btn {
    @apply transition-all duration-200;
  }

  .method-btn.selected {
    @apply bg-[#FDF9F5] border-[#D4A574] shadow-md;
  }

  .method-btn.selected .w-8 {
    @apply bg-[#D4A574]/20;
  }

  .method-btn.selected p {
    @apply text-[#D4A574];
  }
</style>