---
interface Props {
  autoplay?: boolean;
  loop?: boolean;
  className?: string;
  showControls?: boolean;
}

const { 
  autoplay = false, 
  loop = false, 
  className = "",
  showControls = false 
} = Astro.props;
---

<div class={`payment-animation-wrapper ${className}`}>
  <div class="payment-animation-container">
    <!-- Hovedanimasjon -->
    <div class="animation-stage">
      <dotlottie-wc
        id="payment-animation"
        src="/animations/payment-tap.json"
        autoplay={autoplay}
        loop={loop}
        class="main-animation"
      ></dotlottie-wc>
      
      <!-- Suksess-overlay -->
      <div id="success-overlay" class="success-overlay hidden">
        <div class="success-content">
          <div class="success-icon">
            <dotlottie-wc
              id="success-animation"
              src="/animations/success-check.json"
              autoplay="false"
              class="w-full h-full"
            ></dotlottie-wc>
          </div>
          <h3 class="success-title">Betaling godkjent!</h3>
          <p class="success-subtitle">VISA-transaksjonen er fullført</p>
        </div>
      </div>
    </div>
    
    <!-- Statusindikator -->
    <div class="status-container">
      <div class="status-indicator">
        <span class="status-dot"></span>
        <p id="status-message" class="status-message">
          Klar for kontaktløs betaling
        </p>
      </div>
      
      <!-- Progress bar -->
      <div class="progress-bar">
        <div id="progress-fill" class="progress-fill"></div>
      </div>
    </div>
    
    <!-- Kontroller (hvis aktivert) -->
    {showControls && (
      <div class="animation-controls">
        <button id="play-btn" class="control-btn" aria-label="Spill av">
          <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
            <path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z"/>
          </svg>
        </button>
        <button id="pause-btn" class="control-btn hidden" aria-label="Pause">
          <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
            <path d="M5.75 3a.75.75 0 00-.75.75v12.5c0 .414.336.75.75.75h1.5a.75.75 0 00.75-.75V3.75A.75.75 0 007.25 3h-1.5zM12.75 3a.75.75 0 00-.75.75v12.5c0 .414.336.75.75.75h1.5a.75.75 0 00.75-.75V3.75a.75.75 0 00-.75-.75h-1.5z"/>
          </svg>
        </button>
        <button id="restart-btn" class="control-btn" aria-label="Start på nytt">
          <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z"/>
          </svg>
        </button>
      </div>
    )}
  </div>
  
  <!-- Feature badges -->
  <div class="feature-badges">
    <div class="badge">
      <svg class="badge-icon" fill="currentColor" viewBox="0 0 20 20">
        <path d="M10 2a5 5 0 00-5 5v2a2 2 0 00-2 2v5a2 2 0 002 2h10a2 2 0 002-2v-5a2 2 0 00-2-2H7V7a3 3 0 016 0v1h2V7a5 5 0 00-5-5z"/>
      </svg>
      <span>Sikker betaling</span>
    </div>
    <div class="badge">
      <svg class="badge-icon" fill="currentColor" viewBox="0 0 20 20">
        <path d="M13 7H7v6h6V7z"/>
        <path fill-rule="evenodd" d="M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2z"/>
      </svg>
      <span>NFC-teknologi</span>
    </div>
    <div class="badge">
      <svg class="badge-icon" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z"/>
      </svg>
      <span>Lynrask</span>
    </div>
  </div>
</div>

<script>
  // Dynamisk import av dotLottie Web Component
  async function initAnimation() {
    // Import dotLottie web component
    try {
      await import('@lottiefiles/dotlottie-wc');
    } catch (e) {
      console.log('Loading dotlottie-wc...');
    }
    
    const paymentAnim = document.getElementById('payment-animation') as any;
    const successAnim = document.getElementById('success-animation') as any;
    const successOverlay = document.getElementById('success-overlay');
    const statusMessage = document.getElementById('status-message');
    const progressFill = document.getElementById('progress-fill');
    const statusDot = document.querySelector('.status-dot');
    
    // Kontroll-knapper
    const playBtn = document.getElementById('play-btn');
    const pauseBtn = document.getElementById('pause-btn');
    const restartBtn = document.getElementById('restart-btn');
    
    // Animasjonsfaser
    const phases = [
      { message: 'Klar for kontaktløs betaling', progress: 0, status: 'ready' },
      { message: 'Holder telefonen nær terminalen...', progress: 30, status: 'scanning' },
      { message: 'Etablerer NFC-forbindelse...', progress: 50, status: 'connecting' },
      { message: 'Behandler VISA-betaling...', progress: 70, status: 'processing' },
      { message: 'Verifiserer transaksjonen...', progress: 90, status: 'verifying' },
      { message: 'Betaling godkjent!', progress: 100, status: 'success' }
    ];
    
    let currentPhase = 0;
    let animationTimer: number;
    
    function updatePhase(phase: number) {
      if (phase >= phases.length) return;
      
      const current = phases[phase];
      
      // Oppdater melding
      if (statusMessage) {
        statusMessage.textContent = current.message;
        statusMessage.className = `status-message status-${current.status}`;
      }
      
      // Oppdater progress bar
      if (progressFill) {
        progressFill.style.width = `${current.progress}%`;
      }
      
      // Oppdater status dot
      if (statusDot) {
        statusDot.className = `status-dot status-dot-${current.status}`;
      }
      
      // Vis suksess-overlay på siste fase
      if (current.status === 'success') {
        setTimeout(() => {
          successOverlay?.classList.remove('hidden');
          successOverlay?.classList.add('show');
          // Spill av suksess-animasjon
          if (successAnim) {
            successAnim.play();
          }
        }, 500);
      }
    }
    
    function startAnimation() {
      currentPhase = 0;
      updatePhase(0);
      
      // Reset suksess-overlay
      successOverlay?.classList.add('hidden');
      successOverlay?.classList.remove('show');
      
      // Reset suksess-animasjon
      if (successAnim) {
        successAnim.stop();
        successAnim.seek(0);
      }
      
      // Start animasjon
      paymentAnim?.play();
      
      // Simuler faser
      const phaseDuration = 800; // ms per fase
      
      animationTimer = setInterval(() => {
        currentPhase++;
        if (currentPhase < phases.length) {
          updatePhase(currentPhase);
        } else {
          clearInterval(animationTimer);
          
          // Auto-restart hvis loop er aktivert
          if (paymentAnim?.loop) {
            setTimeout(() => {
              startAnimation();
            }, 3000);
          }
        }
      }, phaseDuration);
    }
    
    // Event listeners for kontroller
    playBtn?.addEventListener('click', () => {
      paymentAnim?.play();
      playBtn.classList.add('hidden');
      pauseBtn?.classList.remove('hidden');
    });
    
    pauseBtn?.addEventListener('click', () => {
      paymentAnim?.pause();
      pauseBtn.classList.add('hidden');
      playBtn?.classList.remove('hidden');
    });
    
    restartBtn?.addEventListener('click', () => {
      startAnimation();
      playBtn?.classList.add('hidden');
      pauseBtn?.classList.remove('hidden');
    });
    
    // Start animasjon når komponent er klar
    if (paymentAnim) {
      paymentAnim.addEventListener('ready', () => {
        if (paymentAnim.autoplay) {
          startAnimation();
        }
      });
      
      // Håndter animasjon complete
      paymentAnim.addEventListener('complete', () => {
        if (!paymentAnim.loop) {
          playBtn?.classList.remove('hidden');
          pauseBtn?.classList.add('hidden');
        }
      });
    }
    
    // Respekter reduced motion preference
    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');
    
    if (prefersReducedMotion.matches) {
      paymentAnim?.pause();
      if (statusMessage) {
        statusMessage.textContent = 'Animasjon pauset (reduced motion aktivert)';
      }
    }
  }
  
  // Init når DOM er klar
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initAnimation);
  } else {
    initAnimation();
  }
</script>

<style>
  .payment-animation-wrapper {
    @apply relative w-full;
  }
  
  .payment-animation-container {
    @apply relative bg-gradient-to-br from-purple-500 via-purple-600 to-indigo-700 rounded-2xl p-8 shadow-2xl overflow-hidden;
  }
  
  .payment-animation-container::before {
    content: '';
    @apply absolute inset-0 bg-white opacity-5;
    background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }
  
  .animation-stage {
    @apply relative z-10 flex items-center justify-center min-h-[300px] md:min-h-[400px];
  }
  
  .main-animation {
    @apply w-full max-w-sm mx-auto;
  }
  
  .success-overlay {
    @apply absolute inset-0 flex items-center justify-center bg-white bg-opacity-95 rounded-xl z-20;
    transition: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  
  .success-overlay.hidden {
    @apply opacity-0 scale-95 pointer-events-none;
  }
  
  .success-overlay.show {
    @apply opacity-100 scale-100;
  }
  
  .success-content {
    @apply text-center;
  }
  
  .success-icon {
    @apply w-24 h-24 mx-auto mb-4;
  }
  
  /* Success animation container */
  #success-animation {
    filter: drop-shadow(0 4px 6px rgba(16, 185, 129, 0.25));
  }
  
  .success-title {
    @apply text-2xl font-bold text-green-600 mb-2;
  }
  
  .success-subtitle {
    @apply text-gray-600;
  }
  
  .status-container {
    @apply relative z-10 mt-6 space-y-4;
  }
  
  .status-indicator {
    @apply flex items-center justify-center space-x-3;
  }
  
  .status-dot {
    @apply w-3 h-3 rounded-full transition-all duration-300;
  }
  
  .status-dot-ready {
    @apply bg-gray-400;
  }
  
  .status-dot-scanning {
    @apply bg-yellow-400 animate-pulse;
  }
  
  .status-dot-connecting {
    @apply bg-blue-400 animate-pulse;
  }
  
  .status-dot-processing {
    @apply bg-purple-400 animate-pulse;
  }
  
  .status-dot-verifying {
    @apply bg-indigo-400 animate-pulse;
  }
  
  .status-dot-success {
    @apply bg-green-400;
  }
  
  .status-message {
    @apply text-white font-medium transition-all duration-300;
  }
  
  .status-success {
    @apply text-green-300 font-bold;
  }
  
  .progress-bar {
    @apply w-full h-2 bg-white bg-opacity-20 rounded-full overflow-hidden;
  }
  
  .progress-fill {
    @apply h-full bg-white transition-all duration-500 ease-out rounded-full;
    width: 0%;
  }
  
  .animation-controls {
    @apply flex justify-center space-x-2 mt-6;
  }
  
  .control-btn {
    @apply p-3 bg-white bg-opacity-20 hover:bg-opacity-30 text-white rounded-full transition-all duration-200 transform hover:scale-110;
  }
  
  .control-btn.hidden {
    @apply hidden;
  }
  
  .feature-badges {
    @apply flex flex-wrap justify-center gap-4 mt-8;
  }
  
  .badge {
    @apply flex items-center space-x-2 px-4 py-2 bg-white bg-opacity-10 backdrop-blur-sm rounded-full text-white text-sm font-medium;
  }
  
  .badge-icon {
    @apply w-5 h-5;
  }
  
  /* Responsive adjustments */
  @media (max-width: 640px) {
    .payment-animation-container {
      @apply p-6;
    }
    
    .animation-stage {
      @apply min-h-[250px];
    }
    
    .feature-badges {
      @apply gap-2;
    }
    
    .badge {
      @apply px-3 py-1.5 text-xs;
    }
    
    .badge-icon {
      @apply w-4 h-4;
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .status-dot-scanning,
    .status-dot-connecting,
    .status-dot-processing,
    .status-dot-verifying {
      animation: none;
    }
    
    .progress-fill {
      transition: none;
    }
  }
</style>